{"ast":null,"code":"import _toConsumableArray from \"D:/vsCode/React/React Context Api/16_PostKeeper app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"D:/vsCode/React/React Context Api/16_PostKeeper app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"D:\\\\vsCode\\\\React\\\\React Context Api\\\\16_PostKeeper app\\\\src\\\\postContext.js\",\n  _s = $RefreshSig$(),\n  _this = this,\n  _s2 = $RefreshSig$();\nimport { useState, useContext, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar postContext = /*#__PURE__*/createContext();\nexport var usePostsValue = function usePostsValue() {\n  _s();\n  var value = useContext(postContext);\n  return value;\n};\n_s(usePostsValue, \"ksutO2/Ix3UeCrGnhyM+QEP505Y=\");\nexport var PostContextProvider = function PostContextProvider(_ref) {\n  _s2();\n  var children = _ref.children;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    savedPosts = _useState2[0],\n    setSavedPosts = _useState2[1];\n  var resetPosts = function resetPosts() {\n    return setSavedPosts([]);\n  };\n  var isPostSaved = function isPostSaved(post) {\n    return !!savedPosts.find(function (p) {\n      return p.id === post.id;\n    });\n  };\n  var savePost = function savePost(post) {\n    var isSaved = isPostSaved(post);\n    if (isSaved) {\n      return alert(\"Post is already saved.\");\n    }\n    setSavedPosts(function (prev) {\n      return [post].concat(_toConsumableArray(prev));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(postContext.Provider, {\n    value: {\n      savedPosts: savedPosts,\n      setSavedPosts: setSavedPosts,\n      resetPosts: resetPosts,\n      savePost: savePost,\n      isPostSaved: isPostSaved\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, _this);\n};\n_s2(PostContextProvider, \"0AKRioMz2WChHMzSlAl20cYD2Ds=\");\n_c = PostContextProvider;\nvar _c;\n$RefreshReg$(_c, \"PostContextProvider\");","map":{"version":3,"names":["useState","useContext","createContext","jsxDEV","_jsxDEV","postContext","usePostsValue","_s","value","PostContextProvider","_ref","_s2","children","_useState","_useState2","_slicedToArray","savedPosts","setSavedPosts","resetPosts","isPostSaved","post","find","p","id","savePost","isSaved","alert","prev","concat","_toConsumableArray","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_this","_c","$RefreshReg$"],"sources":["D:/vsCode/React/React Context Api/16_PostKeeper app/src/postContext.js"],"sourcesContent":["import { useState, useContext, createContext } from \"react\";\r\n\r\nconst postContext = createContext();\r\n\r\nexport const usePostsValue = () => {\r\n  const value = useContext(postContext);\r\n  return value;\r\n};\r\n\r\nexport const PostContextProvider = ({ children }) => {\r\n  const [savedPosts, setSavedPosts] = useState([]);\r\n\r\n  const resetPosts = () => setSavedPosts([]);\r\n\r\n  const isPostSaved = (post) => !!savedPosts.find((p) => p.id === post.id);\r\n\r\n  const savePost = (post) => {\r\n    const isSaved = isPostSaved(post);\r\n    if (isSaved) {\r\n      return alert(\"Post is already saved.\");\r\n    }\r\n    setSavedPosts((prev) => [post, ...prev]);\r\n  };\r\n\r\n  return (\r\n    <postContext.Provider\r\n      value={{ savedPosts, setSavedPosts, resetPosts, savePost, isPostSaved }}\r\n    >\r\n      {children}\r\n    </postContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;;;;AAAA,SAASA,QAAQ,EAAEC,UAAU,EAAEC,aAAa,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,IAAMC,WAAW,gBAAGH,aAAa,CAAC,CAAC;AAEnC,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAAAC,EAAA;EACjC,IAAMC,KAAK,GAAGP,UAAU,CAACI,WAAW,CAAC;EACrC,OAAOG,KAAK;AACd,CAAC;AAACD,EAAA,CAHWD,aAAa;AAK1B,OAAO,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAAC,IAAA,EAAqB;EAAAC,GAAA;EAAA,IAAfC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;EAC5C,IAAAC,SAAA,GAAoCb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhC,IAAMI,UAAU,GAAG,SAAbA,UAAUA,CAAA;IAAA,OAASD,aAAa,CAAC,EAAE,CAAC;EAAA;EAE1C,IAAME,WAAW,GAAG,SAAdA,WAAWA,CAAIC,IAAI;IAAA,OAAK,CAAC,CAACJ,UAAU,CAACK,IAAI,CAAC,UAACC,CAAC;MAAA,OAAKA,CAAC,CAACC,EAAE,KAAKH,IAAI,CAACG,EAAE;IAAA,EAAC;EAAA;EAExE,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIJ,IAAI,EAAK;IACzB,IAAMK,OAAO,GAAGN,WAAW,CAACC,IAAI,CAAC;IACjC,IAAIK,OAAO,EAAE;MACX,OAAOC,KAAK,CAAC,wBAAwB,CAAC;IACxC;IACAT,aAAa,CAAC,UAACU,IAAI;MAAA,QAAMP,IAAI,EAAAQ,MAAA,CAAAC,kBAAA,CAAKF,IAAI;IAAA,CAAC,CAAC;EAC1C,CAAC;EAED,oBACEvB,OAAA,CAACC,WAAW,CAACyB,QAAQ;IACnBtB,KAAK,EAAE;MAAEQ,UAAU,EAAVA,UAAU;MAAEC,aAAa,EAAbA,aAAa;MAAEC,UAAU,EAAVA,UAAU;MAAEM,QAAQ,EAARA,QAAQ;MAAEL,WAAW,EAAXA;IAAY,CAAE;IAAAP,QAAA,EAEvEA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACW,CAAC;AAE3B,CAAC;AAACxB,GAAA,CAtBWF,mBAAmB;AAAA2B,EAAA,GAAnB3B,mBAAmB;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}